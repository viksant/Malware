#pragma once
#include <Windows.h>
#include <vector>
#include <TlHelp32.h>

// This function will iterate every running process until it finds msedge.exe to retrieve it's PPID.
BOOL GetParentProcessPPID(LPCWSTR szProcessName, DWORD* dwProcessId)
{
    unsigned int dwSize;

    PROCESSENTRY32	Proc = {
        dwSize = sizeof(PROCESSENTRY32)
    };

    HANDLE hSnapShot = NULL;

    hSnapShot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, NULL);

    if (hSnapShot == INVALID_HANDLE_VALUE) {
        printf("[!] CreateToolhelp32Snapshot Failed With Error : %d \n", GetLastError());
        goto _EndOfFunction;
    }

    // Retrieves information about the first process encountered in the snapshot.
    if (!Process32First(hSnapShot, &Proc)) {
        printf("[!] Process32First Failed With Error : %d \n", GetLastError());
        goto _EndOfFunction;
    }

    do {
        if (wcscmp(Proc.szExeFile, szProcessName) == 0) {
            *dwProcessId = Proc.th32ProcessID;
            // Open a handle to the process
            break; // Exit the loop
        }
    } while (Process32Next(hSnapShot, &Proc));


    // Cleanup
    _EndOfFunction:
    if (hSnapShot != NULL)
        CloseHandle(hSnapShot);
    if (*dwProcessId == NULL)
        return FALSE;
    return TRUE;
}