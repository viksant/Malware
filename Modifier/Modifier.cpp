#include <vector>
#include <iostream>
#include <fstream>
#include <windows.h>

using namespace std;

vector<BYTE> ReadBinaryFile(const string& filename) {
    ifstream file(filename, ios::binary);
    if (!file) {
        const auto& err = errno;

        char error_message[256];

        strerror_s(error_message, sizeof(error_message), err);

        cerr << "Could not open file: " << filename << ". Error: " << error_message << endl;
        return {};  // Return an empty vector
    }

    // Read file's content
    vector<BYTE> data((istreambuf_iterator<char>(file)), istreambuf_iterator<char>());
    file.close();
    return data;
}



int main(int argc, char* argv[])
{
    if (argc < 2) {
        cout << "Usage: " << argv[0] << " [32 bit .exe]\n";
        return 1;
    }

    string filename = argv[1];

    vector<BYTE> fileData = ReadBinaryFile(filename);

    if (fileData.empty()) {
        return 2;
    }

    size_t index = 0;

    for (size_t byte : fileData)
    {
        cout << "Direccion: " << index++ << ", Valor (hex): " << hex << static_cast<int>(byte) << dec << endl;
    }


}


